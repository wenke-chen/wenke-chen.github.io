<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>wenke-chen&#39;s blog</title>
        <link>https://www.wenke-chen.github.io/</link>
        <description>Recent content on wenke-chen&#39;s blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Fri, 11 Jul 2025 22:47:51 +0800</lastBuildDate><atom:link href="https://www.wenke-chen.github.io/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>博客向导</title>
        <link>https://www.wenke-chen.github.io/p/blog-wizard/</link>
        <pubDate>Mon, 26 Feb 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.wenke-chen.github.io/p/blog-wizard/</guid>
        <description>&lt;img src="https://www.wenke-chen.github.io/p/blog-wizard/hugo.png" alt="Featured image of post 博客向导" /&gt;&lt;h2 id=&#34;博客主题&#34;&gt;博客主题&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://themes.gohugo.io/themes/hugo-theme-stack/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo Theme Stack&lt;/a&gt;及 &lt;a class=&#34;link&#34; href=&#34;https://stack.jimmycai.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;参考文档&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;搭建参考教程&#34;&gt;搭建参考教程&lt;/h2&gt;
&lt;p&gt;1、10分钟教你简单搭建个人博客(hugo篇)






    


&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe src=&#34;https://player.bilibili.com/player.html?as_wide=1&amp;amp;high_quality=1&amp;amp;page=1&amp;bvid=BV13c411h7k7&#34;
            scrolling=&#34;no&#34;
            frameborder=&#34;no&#34;
            framespacing=&#34;0&#34;
            allowfullscreen=&#34;true&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;2、10分钟教你简单部署hugo博客(github篇)






    


&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe src=&#34;https://player.bilibili.com/player.html?as_wide=1&amp;amp;high_quality=1&amp;amp;page=1&amp;bvid=BV1WA411h76h&#34;
            scrolling=&#34;no&#34;
            frameborder=&#34;no&#34;
            framespacing=&#34;0&#34;
            allowfullscreen=&#34;true&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;搭建教程相关指令&#34;&gt;搭建教程相关指令&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;一、安装 Hugo及git&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Hugo下载链接&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;：&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;https&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gohugo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getting&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;started&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;installing&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;git下载链接&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;：&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;https&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;git&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scm&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;com&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;downloads&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;二、创建新站点&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo new site myblog
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这将在当前文件路径下生成一个 myblog 文件夹，里面是一个新的 Hugo 站点结构。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;三、选择并安装主题&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;https://themes.gohugo.io/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;建议直接将整个github下载为压缩包到本地。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;四、添加内容，新建博客文章指令&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo new text.md
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这将在 content/posts 目录下创建一个新的 Markdown 文件。您可以使用 Markdown 编辑器编辑这个文件，添加文章内容。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;五、本地预览网站&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo server
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这将启动 Hugo 服务器，您可以通过访问 http://localhost:1313 在浏览器中预览您的站点。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;六、构建和部署&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这将在 public 目录下生成您的站点静态文件&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;七、创建github仓库并将主题推送至仓库&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在github上创建一个名称叫 &lt;a class=&#34;link&#34; href=&#34;https://github.com/yourname/yourname.github.io&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/yourname/yourname.github.io&lt;/a&gt; 的仓库&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 将生成的静态文件推送到该仓库, 相关信息修改成自己的 #
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cd public
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git init
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add -A
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  git config --global user.email &amp;#34;you@example.com&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  git config --global user.name &amp;#34;Your Name&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -am &amp;#34;init&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git remote add origin https://github.com/wenke-chen/wenke-chen.github.io.git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push -f origin master
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;推送完成打开https://yourname.github.io/ 即可看到和本地预览一样的博客网站（yourname为您的github名）。&lt;br&gt;
我的网站是 &lt;a class=&#34;link&#34; href=&#34;https://wenke-chen.github.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://wenke-chen.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x1f648;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>基于无刷电机的平衡小车</title>
        <link>https://www.wenke-chen.github.io/p/segway/</link>
        <pubDate>Fri, 11 Jul 2025 22:47:51 +0800</pubDate>
        
        <guid>https://www.wenke-chen.github.io/p/segway/</guid>
        <description>&lt;img src="https://www.wenke-chen.github.io/p/segway/car.png" alt="Featured image of post 基于无刷电机的平衡小车" /&gt;&lt;h2 id=&#34;一物料清单&#34;&gt;一、物料清单&lt;/h2&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;物料清单.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;物料清单包含所用到的电子件、机械件和3D打印件，并对额外的工具作了说明，本次电机和stm32开发板用的是同一个&lt;a class=&#34;link&#34; href=&#34;https://gitee.com/kit-miao/damiao&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;厂家的产品&lt;/a&gt;，电机自带驱动，省去了自写FOC算法，只需熟悉电机通信协议即可对电机有较好的控制，且厂家自带的范例已能应付很多场景。&lt;/p&gt;
&lt;h2 id=&#34;二电气接线图&#34;&gt;二、电气接线图&lt;/h2&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;电气接线图.png&#34; width=&#34;700&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;电机要先配好ID,esp32开发板要先刷好程序再开始组装。&lt;/p&gt;
&lt;h2 id=&#34;三相关算法理论&#34;&gt;三、相关算法理论&lt;/h2&gt;
&lt;p&gt;首先要确定我们要实现功能的先后顺序，即电机转动&amp;ndash;&amp;gt;小车直立&amp;ndash;&amp;gt;小车遥控。&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;流程图.png&#34; width=&#34;700&#34;/&gt; 
&lt;/div&gt;
&lt;h3 id=&#34;1电机转动&#34;&gt;1、电机转动&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;本次用的直立算法是LQR,输出的是力矩，所以用电机的MIT模式。&lt;/strong&gt;&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;MIT模式下控制帧.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;根据通信协议，我们查看厂家给的CAN控制函数范例。&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;************************************************************************
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;* @brief:      	mit_ctrl: MIT模式下的电机控制函数
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;* @param[in]:   hcan:			指向CAN_HandleTypeDef结构的指针，用于指定CAN总线
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;* @param[in]:   motor_id:	电机ID，指定目标电机
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;* @param[in]:   pos:			位置给定值
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;* @param[in]:   vel:			速度给定值
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;* @param[in]:   kp:				位置比例系数
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;* @param[in]:   kd:				位置微分系数
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;* @param[in]:   torq:			转矩给定值
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;* @retval:     	void
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;* @details:    	通过CAN总线向电机发送MIT模式下的控制帧。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;************************************************************************
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;**/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;void mit_ctrl(hcan_t* hcan, uint16_t motor_id, float pos, float vel,float kp, float kd, float torq)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	uint8_t data[8];
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	uint16_t pos_tmp,vel_tmp,kp_tmp,kd_tmp,tor_tmp;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	uint16_t id = motor_id + MIT_MODE;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	pos_tmp = float_to_uint(pos,  P_MIN,  P_MAX,  16);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	vel_tmp = float_to_uint(vel,  V_MIN,  V_MAX,  12);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	kp_tmp  = float_to_uint(kp,   KP_MIN, KP_MAX, 12);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	kd_tmp  = float_to_uint(kd,   KD_MIN, KD_MAX, 12);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	tor_tmp = float_to_uint(torq, T_MIN,  T_MAX,  12);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	data[0] = (pos_tmp &amp;gt;&amp;gt; 8);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	data[1] = pos_tmp;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	data[2] = (vel_tmp &amp;gt;&amp;gt; 4);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	data[3] = ((vel_tmp&amp;amp;0xF)&amp;lt;&amp;lt;4)|(kp_tmp&amp;gt;&amp;gt;8);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	data[4] = kp_tmp;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	data[5] = (kd_tmp &amp;gt;&amp;gt; 4);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	data[6] = ((kd_tmp&amp;amp;0xF)&amp;lt;&amp;lt;4)|(tor_tmp&amp;gt;&amp;gt;8);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	data[7] = tor_tmp;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	canx_send_data(hcan, id, data, 8);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;*MIT命令采用浮点数据等比例转换成整数发送到驱动器，驱动器再将接收到的整数等比例转换成浮点数据。这转换需要用到转换函数float_to_uint，这转换函数需要首先确定两个等比例转换的最大最小值，这两个值可以在上位参数设定页面查询，其中 KP、KD 的最大最小值默认分别为 0.0~500.0、0.0~5.0。Pos、Vel、Torque 分别预设为±12.5、±30、±10，这三个参数可以根据电机的实际参数进行调整。但发送控制命令时，一定要与设定值保持致，否则会控制命令会发生等比例缩放。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;下图是电机MIT模式的控制框图&lt;/strong&gt;&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;MIT模式控制框图.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
MIT模式可实现力矩、位置、速度三者混合控制，在上图中，位置环与速度环是并联形式，这里的位置环与速度环的输出值与前馈力矩t_ff相加得到参考力矩T_ref：
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;力矩计算公式.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
其中:&lt;br&gt; 
T_ref 为参考力矩，单位是 N·m。 &lt;br&gt;  
kp 为位置增益。kd 为速度增益。  &lt;br&gt; 
p_des 为电机输出轴的期望位置，单位为 rad。  &lt;br&gt; 
θm 为电机输出轴的当前位置，单位为 rad。  &lt;br&gt; 
v_des 为电机输出轴的期望速度，单位为 rad/s。&lt;br&gt; 
为电机输出轴的当前速度，单位为 rad/s。   &lt;br&gt; 
参考力矩 T_ref 经过 KT_OUT 换算，得到参考电流 iqref，从而进入后续的电流 PI 控制器。&lt;br&gt;   
其中：
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;iqrf.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;iqref 为参考电流，单位为 A。&lt;br&gt;
GR 为电机减速比。&lt;br&gt;
Kt 为减速前的转矩常数，单位是 N·m/A。&lt;br&gt;
NPP 是极对数。&lt;br&gt;
flux 磁链，单位是 Wb，可以通过读电机参数得出。&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;根据厂家的通信协议，每次发送指令后会有反馈帧，对反馈帧处理可得到包括电机ID、状态、位置、速度、扭矩相关温度参数、寄存器数据等。&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;************************************************************************
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;* @brief:      	dm4310_fbdata: 获取DM4310电机反馈数据函数
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;* @param[in]:   motor:    指向motor_t结构的指针，包含电机相关信息和反馈数据
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;* @param[in]:   rx_data:  指向包含反馈数据的数组指针
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;* @param[in]:   data_len: 数据长度
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;* @retval:     	void
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;* @details:    	从接收到的数据中提取DM4310电机的反馈信息，包括电机ID、
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*               状态、位置、速度、扭矩相关温度参数、寄存器数据等
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;************************************************************************
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;**/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;void dm4310_fbdata(Joint_Motor_t *motor, uint8_t *rx_data,uint32_t data_len)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{ 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	if(data_len==FDCAN_DLC_BYTES_8)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	{//返回的数据有8个字节
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	  motor-&amp;gt;para.id = (rx_data[0])&amp;amp;0x0F;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	  motor-&amp;gt;para.state = (rx_data[0])&amp;gt;&amp;gt;4;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	  motor-&amp;gt;para.p_int=(rx_data[1]&amp;lt;&amp;lt;8)|rx_data[2];
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	  motor-&amp;gt;para.v_int=(rx_data[3]&amp;lt;&amp;lt;4)|(rx_data[4]&amp;gt;&amp;gt;4);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	  motor-&amp;gt;para.t_int=((rx_data[4]&amp;amp;0xF)&amp;lt;&amp;lt;8)|rx_data[5];
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	  motor-&amp;gt;para.pos = uint_to_float(motor-&amp;gt;para.p_int, P_MIN, P_MAX, 16); // (-12.5,12.5)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	  motor-&amp;gt;para.vel = uint_to_float(motor-&amp;gt;para.v_int, V_MIN, V_MAX, 12); // (-30.0,30.0)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	  motor-&amp;gt;para.tor = uint_to_float(motor-&amp;gt;para.t_int, T_MIN, T_MAX, 12);  // (-10.0,10.0)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	  motor-&amp;gt;para.Tmos = (float)(rx_data[6]);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	  motor-&amp;gt;para.Tcoil = (float)(rx_data[7]);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;再下一层就是stm32hal库的can初始化和发送接收函数了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;void MX_FDCAN1_Init(void)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;uint8_t canx_send_data(FDCAN_HandleTypeDef *hcan, uint16_t id, uint8_t *data, uint32_t len)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;....
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;2小车直立&#34;&gt;2、小车直立&lt;/h3&gt;
&lt;h4 id=&#34;lqr和pid控制算法的对比&#34;&gt;LQR和PID控制算法的对比&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;对比如下表（摘自网络）。&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;特性&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;LQR&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;PID&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;控制对象&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;多变量耦合系统（如小车角度+位置）&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;单变量系统（如水温）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;设计原理&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;基于数学模型优化（解 Riccati 方程）&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;基于误差经验调参&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;核心优势&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;全局最优 • 多状态自动协调&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;简单易用 • 无需模型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;参数调整&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;调权重矩阵（Q/R）&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;调三个系数（Kp/Ki/Kd）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;抗干扰能力&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;✅ 更强（通过状态权重主动抑制）&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;❌ 高频噪声易放大&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;适用系统&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;线性系统 • 精确建模场景&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;非线性系统 • 模型未知场景&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;计算复杂度&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;离线计算复杂 • 在线计算简单&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;全程计算简单&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;典型应用&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;倒立摆 • 无人机 • 机械臂&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;温控 • 液位控制 • 电机调速&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;这里直立算法选择用LQR，后面有时间也会出一版PID的程序。&lt;/p&gt;
&lt;h4 id=&#34;lqr数学模型&#34;&gt;LQR数学模型&lt;/h4&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;car.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;运动学&lt;/strong&gt;&lt;br&gt;
运动学模型主要描述两轮自平衡机器人运动速度、转向和左右两轮速度之间的关系。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;动力学&lt;/strong&gt;&lt;br&gt;
a.对于车轮&lt;br&gt;
针对右轮进行受力分析&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;右轮受力分析.png&#34; width=&#34;300&#34;/&gt; 
&lt;/div&gt;
车轮的运动可分解为平动和转动，则由牛顿第二定律可得：
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式1.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
由刚体定轴转动定律可得
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式2.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
上式（1）（2）中   &lt;br&gt;
m为车轮的质量（kg）；&lt;br&gt;
r为车轮的半径（m）；&lt;br&gt;
xR为右轮水平位移（m）；&lt;br&gt;
HfR为右轮受到地面摩擦力的大小（N）；&lt;br&gt;
HR为右轮受到车体作用力的水平分力的大小（N）；&lt;br&gt;
TR为右轮电机输出转矩的大小（N/m）；&lt;br&gt;
I为车轮的转动惯量（kg/m2）；&lt;br&gt;
WR为右轮的角度的大小（rad/s）&lt;br&gt;
&lt;br&gt;
联立（1）和（2），消去HfR,可得&lt;br&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式3.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;在车轮不打滑的情况下，车轮移动速度的大小和转动速度的大小成比例关系，即&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式4.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;将方程（4）代入（3）中，可得&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式5.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;由于左右轮的参数相同，则对左轮也可以得到相似的结果，即&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式6.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;b.对于车身正向&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;车身正向受力分析.png&#34; width=&#34;300&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;小车的正向运动可以分解为前向运动和绕车体质心P的相对转动（俯仰）。小车底盘中心O的水平位移&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式7.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;将方程（5）和（6）相加后，等式两边处以2可得&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式8.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;联立方程（7）（8）可得&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式9.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;对车体，由牛顿第二定律可得
在水平方向上，有&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式10.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;在竖直方向上，有&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式11.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;对车体，由刚体定轴转动定律可得&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式12.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;其中&lt;br&gt;
M 车体的质量（kg）；&lt;br&gt;
l 质心距底盘中心的距离（m）；&lt;br&gt;
JP 车体绕质心转动时的转动惯量（kg/m2）；&lt;br&gt;
θP车体与竖直方向所成的夹角（rad）；&lt;/p&gt;
&lt;p&gt;联立方程（9）（10）可得&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式13.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;br&gt;
c.模型线性化&lt;br&gt;
因为该方程含有非线性项，因此，要进行线性化。考虑到车体的倾角比较小（通常情况下，−10°≤倾角≤10°），则可以认为
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;模型线性化.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;故方程（13）变为&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式14.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;将方程（10）和（11）代入方程（12）中，可得&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式15.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;类似的，对方程 （15）进行线性化可得&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式16.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;将方程（16）代入方程（14）中，消去θP二阶导可得&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式17.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
式中
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式17（2）.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;将方程（14）代入方程（16）中，消去x二阶导可得&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式18.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
式中
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式18（2）.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;综上所述，对于正向运动有&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式19.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;对车体，由刚体定轴转动定律可得&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式12.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;br&gt;
d.转向运动&lt;br&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;转向运动受力分析.png&#34; width=&#34;300&#34;/&gt; 
&lt;/div&gt;
转向运动是由于左右两车轮从水平方向上施加给车体的反作用力的大小HL和HR不相等引起的，则由刚体定轴转动定律可得
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式20.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;其中&lt;br&gt;
d 轮距（m）&lt;br&gt;
Jδ 车体绕y轴转动的转动惯量（kg/）&lt;br&gt;
δ 小车的偏航角（rad）&lt;br&gt;
将方程（5）和（6）相减可得&lt;br&gt;
对车体，由刚体定轴转动定律可得&lt;br&gt;&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式21.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;小车转向示意图&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;小车转向示意图.png&#34; width=&#34;300&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;当左右两轮运动速度不相等时，小车身转向，如图 2-4 所示。由几何关系可得&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式22.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;解得&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式23.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;由方程（23）进一步可得&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式24.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;联立方程（20）（21）（24）可得&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式25.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;由方程（19）和（25）可得系统的状态方程为&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式26.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;左侧的状态变量分别表示小车的位移、前进速度、车体的倾角、车体的角速度、小车的转向角以及转向速度。由于电机输出转矩的大小不好直接控制，则由刚体定轴转动定律将其转化为两个车轮的加速度。&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式27.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;其中&lt;br&gt;
VLO左轮无摩擦时线速度的大小（rad/s）&lt;br&gt;
VRO右轮无摩擦时线速度的大小（rad/s）&lt;br&gt;
故系统的状态空间表达式变为&lt;br&gt;&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式28.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式28（2）.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
矩阵中的元素为
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式28（3）.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
其中
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式28（4）.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;h4 id=&#34;lqr控制器&#34;&gt;LQR控制器&lt;/h4&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;线性二次调节器.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;最优控制&lt;/strong&gt;在现代控制理论中有着及其重要的位置，其研究目标是使受控系统的性能指标达到最优时，所需要的基本条件，及其控制的综合方法。
&lt;strong&gt;线性二次型（LQR）控制&lt;/strong&gt;，是一种线性状态反馈控制方法，是最优控制理
论中最成熟、最系统的方法。&lt;/p&gt;
&lt;p&gt;(1)系统状态方程&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式119.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;(2)性能指标&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式120.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;(3)反馈增益矩阵K&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式30.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;(4)Riccati代数方程&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;公式123.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;h4 id=&#34;仿真&#34;&gt;仿真&lt;/h4&gt;
&lt;p&gt;(1)Simulink模型&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;Simulink模型.png&#34; width=&#34;600&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;(2)MATLAB代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;clc
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;clear
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;% 模型参数初始化
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;m=0.178; %车轮的质量 kg
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;r = 0.03375; %车轮的半径 m
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;M = 0.610; %车体的质量 kg
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;I = 0.5*m*r^2; %车轮的转动惯量
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;l = 0.055; %质心距底盘中心的距离
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Jz = (1/3)*M*l*l; %车体绕质心转动时的转动惯量
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;g=9.8;                     %重力加速度，单位为m/s^2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;%状态空间参数初始化
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;a=r*(M+2*m+2*I/(r^2));
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;b=M*r*l;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;c=Jz+M*l^2;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;d=M*g*l;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;e=M*l;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;A23=-b*d/(a*c-b*e);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;A43=a*d/(a*c-b*e);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;B21=(c+b)/(a*c-b*e);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;B22=(c+b)/(a*c-b*e);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;B41=-(e+a)/(a*c-b*e);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;B42=-(e+a)/(a*c-b*e);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;%状态空间矩阵
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;A=[0 1  0  0 ;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   0 0 A23 0 ;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   0 0  0  1;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   0 0 A43 0 ]  ;                      %状态矩阵
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;B=[0 0;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    B21 B22;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    0 0;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    B41 B42];     %输入矩阵
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;%系统可控性判断
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Co=ctrb(A,B);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;if(rank(Co)==4)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    disp(&amp;#39;系统可控&amp;#39;);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;else
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    disp(&amp;#39;系统不可控&amp;#39;);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;end
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;%LQR控制器设计
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  Q = [0.1 0  0    0 ;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         0   1 0   0 ; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         0   0 70 0 ; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         0   0  0    0.05 ]; %权重矩阵 Q 的设计
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    R = [120 0; 0 120]; %权重矩阵 R 的设计
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;K=lqr(A,B,Q,R)                         %调节参数
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;(3)python代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;64
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;65
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;import numpy as np
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;import control as ctrl
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 模型参数初始化
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;m = 0.178  # 车轮的质量 kg
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;r = 0.03375  # 车轮的半径 m
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;M = 0.610  # 车体的质量 kg
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;I = 0.5 * m * r**2  # 车轮的转动惯量
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;l = 0.055  # 质心距底盘中心的距离
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Jz = (1/3) * M * l * l  # 车体绕质心转动时的转动惯量
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;g = 9.8  # 重力加速度 m/s²
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 状态空间参数计算
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;a = r * (M + 2*m + 2*I/(r**2))
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;b = M * r * l
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;c = Jz + M * l**2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;d = M * g * l
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;e = M * l
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 计算中间参数
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;denominator = a*c - b*e  # 公共分母
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;A23 = -b*d / denominator
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;A43 = a*d / denominator
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;B21 = (c + b) / denominator
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;B22 = B21  # 与 B21 相同
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;B41 = -(e + a) / denominator
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;B42 = B41  # 与 B41 相同
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 构建状态空间矩阵
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;A = np.array([
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    [0, 1, 0, 0],
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    [0, 0, A23, 0],
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    [0, 0, 0, 1],
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    [0, 0, A43, 0]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;B = np.array([
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    [0, 0],
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    [B21, B22],
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    [0, 0],
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    [B41, B42]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 检查系统可控性
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Co = ctrl.ctrb(A, B)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rank = np.linalg.matrix_rank(Co)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;print(&amp;#34;系统可控&amp;#34; if rank == 4 else &amp;#34;系统不可控&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# LQR控制器设计
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Q = np.array([
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    [0.1, 0, 0, 0],
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    [0, 1, 0, 0],
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    [0, 0, 70, 0],
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    [0, 0, 0, 0.05]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;R = np.array([
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    [120, 0],
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    [0, 120]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 计算LQR增益
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;K, _, _ = ctrl.lqr(A, B, Q, R)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;print(&amp;#34;\nLQR增益矩阵 K:&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;print(K)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;(4)实验结果&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;仿真结果.png&#34; width=&#34;400&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;核心是调节Q/R矩阵的4个权重值（位置/速度/角度/角速度)&lt;br&gt;
角度权重 &amp;raquo; 位置权重 (通常10倍以上)&lt;/p&gt;
&lt;h4 id=&#34;参考资料&#34;&gt;参考资料&lt;/h4&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/qq_42681425/article/details/147955308?sharetype=blogdetail&amp;amp;shareId=147955308&amp;amp;sharerefer=APP&amp;amp;sharesource=xiumabao0646&amp;amp;sharefrom=link&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【电机仿真】LQR控制器——二轮平衡小车控制&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.eet-china.com/mp/a44309.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;超详细!!双轮平衡小车原理分析,文末附STM32源码!&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;实物部署&#34;&gt;实物部署&lt;/h4&gt;
&lt;p&gt;通过LQR矩阵分别与对应的数值差计算再累加，可得出电机的力矩大小，如果只是直立的话，只计算其中一个力矩，另外一个数值即等大反向。&lt;br&gt;
将程序烧录到小车上后可观察出力矩方向看是否正负反了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;float lqr_k[2][4]={{-0.02041241, -0.09635536, -0.65913956, -0.03197374},
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; {-0.02041241, -0.09635536, -0.65913956, -0.03197374}};
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;void ChassisR_task(void)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	while(INS.ins_flag==0)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	{//等待加速度收敛
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	  osDelay(1);	
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  ChassisR_init(&amp;amp;chassis_move);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	while(1)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	{	
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		chassisR_feedback_update(&amp;amp;chassis_move,&amp;amp;INS);//更新数据
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;							
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    	chassis_move.wheel_motor[1].wheel_T=lqr_k[0][0]*(chassis_move.x_set-chassis_move.x)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;						+lqr_k[0][1]*(chassis_move.v_set-chassis_move.v)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;						+lqr_k[0][2]*(0.03f-chassis_move.myPithR)//0.03rad是机械中值
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;						+lqr_k[0][3]*(chassis_move.d_phi_set-chassis_move.myPithGyroR);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		chassis_move.wheel_motor[0].wheel_T=-chassis_move.wheel_motor[1].wheel_T;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		scaled_down(&amp;amp;chassis_move.wheel_motor[0].wheel_T, &amp;amp;chassis_move.wheel_motor[1].wheel_T,-0.1f,0.1f); //限幅，等比例缩放 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		if(chassis_move.start_flag==1)	
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			mit_ctrl2(&amp;amp;hfdcan1,0x01, 0.0f, 0.0f,0.0f, 0.0f,chassis_move.wheel_motor[0].wheel_T);//左边电机
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			osDelay(CHASSR_TIME);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			mit_ctrl2(&amp;amp;hfdcan1,0x02, 0.0f, 0.0f,0.0f, 0.0f,chassis_move.wheel_motor[1].wheel_T);//右边电机
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			osDelay(CHASSR_TIME);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		else if(chassis_move.start_flag==0)	
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			chassis_move.turn_set=chassis_move.total_yaw;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			mit_ctrl2(&amp;amp;hfdcan1,0x01, 0.0f, 0.0f,0.0f, 0.0f,0.0f);//左边电机	
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			osDelay(CHASSR_TIME);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			mit_ctrl2(&amp;amp;hfdcan1,0x02, 0.0f, 0.0f,0.0f, 0.0f,0.0f);//右边电机	
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			osDelay(CHASSR_TIME);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;} 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;上面的程序中计算出力矩后还是进行了限幅的操作，防止力矩过大。&lt;br&gt;
小车成功直立后可微调K矩阵让效果更好&lt;/p&gt;
&lt;h3 id=&#34;3小车遥控&#34;&gt;3、小车遥控&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;硬件及遥控数据接收程序&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;小车遥控的接收板选用的是带蓝牙wifi的wsp32，既可以实现2.4g网络遥控，也可以通过蓝牙遥控，价格也不比单独的蓝牙模块贵。&lt;br&gt;
手柄选用的是国产xbox系列的，刚好github上有网友分享了&lt;a class=&#34;link&#34; href=&#34;https://github.com/xiaocainiao11111/ESP32_connect_XboxController&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;xbox+esp32的程序&lt;/a&gt;，稍微改下即可使用。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;void loop()
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  xboxController.onLoop();
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  delay(50);# 控制发送频率
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  if ((xboxController.xboxNotif.btnStart == 1) &amp;amp;&amp;amp; (last_start != xboxController.xboxNotif.btnStart))
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    if (start == 0)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      start = 1;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    else
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      start = 0;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  last_start = xboxController.xboxNotif.btnStart;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  if (xboxController.isConnected() &amp;amp;&amp;amp; (start == 1))
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    if (xboxController.isWaitingForFirstNotification())
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      Serial.println(&amp;#34;waiting for first notification&amp;#34;);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    else
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      Serial.print(xbox_string());
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  else if (!xboxController.isConnected() &amp;amp;&amp;amp; (start == 1))
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Serial.println(&amp;#34;not connected&amp;#34;);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    if (xboxController.getCountFailedConnection() &amp;gt; 2)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      ESP.restart();
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;我这里改的地方是增加延时来控制发送频率，另外增加了按键来控制是否发送手柄数据到串口。&lt;/p&gt;
&lt;p&gt;最后增加个freertos的任务专门处理手柄数据即可。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;  1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 64
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 65
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 66
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 67
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 68
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 69
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 70
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 71
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 72
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 73
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 74
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 75
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 76
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 77
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 78
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 79
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 80
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 81
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 82
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 83
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 84
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 85
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 86
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 87
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 88
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 89
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 90
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 91
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 92
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 93
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 94
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 95
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 96
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 97
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 98
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 99
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;100
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;101
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;102
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;103
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;104
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;105
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;106
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;107
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;108
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;109
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;110
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;111
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;112
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;113
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;114
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;115
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;116
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;117
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;118
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;119
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;120
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;121
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;void Xbox_task(void)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    if (esp32_rx_flag)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        // 清除接收完成标志
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        esp32_rx_flag = 0;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        // 确保数据结尾有换行符
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        if (esp32_rx_len &amp;gt; 0 &amp;amp;&amp;amp; esp32_rx_buffer[esp32_rx_len - 1] == &amp;#39;\n&amp;#39;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            // 复制数据到临时缓冲区，并添加字符串结束符
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            char temp_buffer[ESP32_RX_BUFFER_SIZE];
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            // 排除 &amp;#39;\n&amp;#39;，只复制中间的数据部分
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            strncpy(temp_buffer, (char*)esp32_rx_buffer, esp32_rx_len - 1);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            temp_buffer[esp32_rx_len - 1] = &amp;#39;\0&amp;#39;;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            char *token;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            char *rest = temp_buffer;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            int data_index = 0;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            // 解析所有22个数据
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            while ((token = strtok_r(rest, &amp;#34;,&amp;#34;, &amp;amp;rest)) != NULL)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                switch (data_index)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    case 0: xbox_controller_data.btnY = atoi(token); break;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    case 1: xbox_controller_data.btnX = atoi(token); break;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    case 2: xbox_controller_data.btnB = atoi(token); break;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    case 3: xbox_controller_data.btnA = atoi(token); break;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    case 4: xbox_controller_data.btnLB = atoi(token); break;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    case 5: xbox_controller_data.btnRB = atoi(token); break;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    case 6: xbox_controller_data.btnSelect = atoi(token); break;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    case 7: xbox_controller_data.btnStart = atoi(token); break;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    case 8: xbox_controller_data.btnXbox = atoi(token); break;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    case 9: xbox_controller_data.btnShare = atoi(token); break;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    case 10: xbox_controller_data.btnLS = atoi(token); break;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    case 11: xbox_controller_data.btnRS = atoi(token); break;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    case 12: xbox_controller_data.btnDirUp = atoi(token); break;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    case 13: xbox_controller_data.btnDirRight = atoi(token); break;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    case 14: xbox_controller_data.btnDirDown = atoi(token); break;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    case 15: xbox_controller_data.btnDirLeft = atoi(token); break;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    case 16: xbox_controller_data.joyLHori = atoi(token); break;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    case 17: xbox_controller_data.joyLVert = atoi(token); break;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    case 18: xbox_controller_data.joyRHori = atoi(token); break;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    case 19: xbox_controller_data.joyRVert = atoi(token); break;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    case 20: xbox_controller_data.trigLT = atoi(token); break;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    case 21: xbox_controller_data.trigRT = atoi(token); break;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    default: break;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                data_index++;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		if(xbox_controller_data.btnY == 1 &amp;amp;&amp;amp; start_flag == 0)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		{//启动
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			chassis_move.start_flag=1;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			start_flag = 1;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		else if(xbox_controller_data.btnY == 1 &amp;amp;&amp;amp; start_flag == 1)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		{//停止
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			chassis_move.start_flag=0;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			start_flag = 0;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		if(chassis_move.start_flag==1)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			if(xbox_controller_data.btnB == 1 &amp;amp;&amp;amp; pause_flag == 0)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			{//暂停
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				chassis_move.front_flag=0;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				chassis_move.turn_flag=0;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				chassis_move.v_set=0.0f;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				chassis_move.turn_set=chassis_move.total_yaw;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			else if(xbox_controller_data.btnDirUp == 1)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			{//前进
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				chassis_move.front_flag=1;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				chassis_move.v_set=5.0f*vel_ratio;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				chassis_move.x_set=chassis_move.x_set+chassis_move.v_set*0.02f;				
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			else if(xbox_controller_data.btnDirDown == 1)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			{//后退
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				chassis_move.front_flag=1;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				chassis_move.v_set=-5.0f*vel_ratio;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				chassis_move.x_set=chassis_move.x_set+chassis_move.v_set*0.02f;				
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			else if(xbox_controller_data.btnDirLeft == 1)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			{//左转
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				chassis_move.turn_flag=1;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				chassis_move.turn_set=10.0f*vel_ratio;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			else if(xbox_controller_data.btnDirRight == 1)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			{//右转
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				chassis_move.turn_flag=1;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				chassis_move.turn_set=-10.0f*vel_ratio;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			else if(xbox_controller_data.btnLB == 1)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				vel_ratio-=0.05f;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				// 将 vel_ratio 限制在 [0.2, 0.6] 范围内
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				vel_ratio=(vel_ratio &amp;lt; 0.2f) ? 0.2f : ((vel_ratio &amp;gt; 0.6f) ? 0.6f : vel_ratio);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			else if(xbox_controller_data.btnRB == 1)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				vel_ratio+=0.05f;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				// 将 vel_ratio 限制在 [0.2, 0.6] 范围内
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				vel_ratio=(vel_ratio &amp;lt; 0.2f) ? 0.2f : ((vel_ratio &amp;gt; 0.6f) ? 0.6f : vel_ratio);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			else
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			{//暂停
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				chassis_move.front_flag=0;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				chassis_move.turn_flag=0;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				chassis_move.v_set=0.0f;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				chassis_move.turn_set=chassis_move.total_yaw;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			pause_flag = xbox_controller_data.btnB;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		}	
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		osDelay(1);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;遥控数据处理程序&lt;/strong&gt;&lt;br&gt;
基于直立的程序进行修改&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;64
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;65
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;66
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;67
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;float Turn_Kp=0.03f;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;float Turn_Kd=0.12;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//转向环
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;float Turn(float Angle,float Gyro)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	 float tor3;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	 if(chassis_move.turn_flag==1)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	 {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		 tor3=(chassis_move.turn_set-Gyro)*Turn_Kd;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	 }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	 else if(chassis_move.turn_flag==0)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	 {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	   tor3=Turn_Kp*(chassis_move.turn_set-Angle)-Gyro*Turn_Kd; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	 } 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	 return tor3;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;void ChassisR_task(void)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	while(INS.ins_flag==0)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	{//等待加速度收敛
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	  osDelay(1);	
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  ChassisR_init(&amp;amp;chassis_move);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	while(1)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	{	
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		chassisR_feedback_update(&amp;amp;chassis_move,&amp;amp;INS);//更新数据
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;							
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    chassis_move.wheel_motor[0].wheel_T=lqr_k[0][0]*(chassis_move.x_set-chassis_move.x)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;								+lqr_k[0][1]*(chassis_move.v_set-chassis_move.v)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;								+lqr_k[0][2]*(0.03f-chassis_move.myPithR)//0.03rad是机械中值
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;								+lqr_k[0][3]*(chassis_move.d_phi_set-chassis_move.myPithGyroR);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		chassis_move.wheel_motor[1].wheel_T=lqr_k[1][0]*(chassis_move.x_set-chassis_move.x)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;								+lqr_k[1][1]*(chassis_move.v_set-chassis_move.v)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;								+lqr_k[1][2]*(0.03f-chassis_move.myPithR)//0.03rad是机械中值
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;								+lqr_k[1][3]*(chassis_move.d_phi_set-chassis_move.myPithGyroR);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		chassis_move.wheel_motor[0].wheel_T=0.0f-chassis_move.wheel_motor[0].wheel_T;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		turn_T= Turn(chassis_move.total_yaw,INS.Gyro[2]);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		chassis_move.wheel_motor[0].wheel_T=chassis_move.wheel_motor[0].wheel_T-turn_T;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		chassis_move.wheel_motor[1].wheel_T=chassis_move.wheel_motor[1].wheel_T-turn_T;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		scaled_down(&amp;amp;chassis_move.wheel_motor[0].wheel_T, &amp;amp;chassis_move.wheel_motor[1].wheel_T,-0.1f,0.1f);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		if(chassis_move.start_flag==1)	
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			mit_ctrl2(&amp;amp;hfdcan1,0x01, 0.0f, 0.0f,0.0f, 0.0f,chassis_move.wheel_motor[0].wheel_T);//左边电机
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			osDelay(CHASSR_TIME);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			mit_ctrl2(&amp;amp;hfdcan1,0x02, 0.0f, 0.0f,0.0f, 0.0f,chassis_move.wheel_motor[1].wheel_T);//右边电机
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			osDelay(CHASSR_TIME);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		else if(chassis_move.start_flag==0)	
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			chassis_move.turn_set=chassis_move.total_yaw;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			mit_ctrl2(&amp;amp;hfdcan1,0x01, 0.0f, 0.0f,0.0f, 0.0f,0.0f);//左边电机	
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			osDelay(CHASSR_TIME);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			mit_ctrl2(&amp;amp;hfdcan1,0x02, 0.0f, 0.0f,0.0f, 0.0f,0.0f);//右边电机	
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			osDelay(CHASSR_TIME);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;四调试心得&#34;&gt;四、调试心得&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;现象&lt;/th&gt;
&lt;th&gt;根本原因&lt;/th&gt;
&lt;th&gt;解决方案&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;高频抖动 (&amp;gt;10Hz)&lt;/td&gt;
&lt;td&gt;速度项权重不足&lt;/td&gt;
&lt;td&gt;↑ Q&lt;a class=&#34;link&#34; href=&#34;%e9%80%9f%e5%ba%a6&#34; &gt;1&lt;/a&gt; / ↑ Q&lt;a class=&#34;link&#34; href=&#34;%e8%a7%92%e9%80%9f%e5%ba%a6&#34; &gt;3&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;低频摇摆 (0.5~2Hz)&lt;/td&gt;
&lt;td&gt;R值过大或位置权重过高&lt;/td&gt;
&lt;td&gt;↓ R 或 ↓ Q&lt;a class=&#34;link&#34; href=&#34;%e4%bd%8d%e7%bd%ae&#34; &gt;0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;受扰恢复慢 (&amp;gt;1s)&lt;/td&gt;
&lt;td&gt;角度权重不足&lt;/td&gt;
&lt;td&gt;↑ Q&lt;a class=&#34;link&#34; href=&#34;%e8%a7%92%e5%ba%a6&#34; &gt;2&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;电机发烫&lt;/td&gt;
&lt;td&gt;R值过小&lt;/td&gt;
&lt;td&gt;↑ R&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;位置持续漂移&lt;/td&gt;
&lt;td&gt;位置权重过低&lt;/td&gt;
&lt;td&gt;↑ Q[0] 同时 ↑ R 防抖&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;五实物展示&#34;&gt;五、实物展示&lt;/h2&gt;
&lt;p&gt;实物中为方便调试加入了lcd显示屏和无线仿真器，并将外观做成了类似小米9号平衡车的样子。






    


&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe src=&#34;https://player.bilibili.com/player.html?as_wide=1&amp;amp;high_quality=1&amp;amp;page=1&amp;bvid=BV1ERuzzHEXi&#34;
            scrolling=&#34;no&#34;
            frameborder=&#34;no&#34;
            framespacing=&#34;0&#34;
            allowfullscreen=&#34;true&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;所涉及资料都已放在github，有需要可自行下载。&lt;/strong&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/wenke-chen/DM-segway&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;所用代码、BOM及3D文件&lt;/a&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/wenke-chen/DM-segway&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/wenke-chen/DM-segway&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>艾利·高德拉特的智慧之旅：《目标》系列读后感</title>
        <link>https://www.wenke-chen.github.io/p/reading-notes-1/</link>
        <pubDate>Thu, 29 Feb 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.wenke-chen.github.io/p/reading-notes-1/</guid>
        <description>&lt;img src="https://www.wenke-chen.github.io/p/reading-notes-1/dream.jpg" alt="Featured image of post 艾利·高德拉特的智慧之旅：《目标》系列读后感" /&gt;&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;
&lt;p&gt;艾利·高德拉特的《目标》系列不仅仅是关于生产管理和项目管理的书籍，它们是关于如何在生活和工作中实现目标的深刻洞察。通过这一系列的阅读，我不仅学到了约束理论（Theory of Constraints, TOC）的精髓，还对如何设定和实现目标有了全新的认识。&lt;/p&gt;
&lt;h2 id=&#34;目标效率的启示&#34;&gt;《目标》：效率的启示&lt;/h2&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;目标.jpg&#34; width=&#34;150&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;《目标》作为系列的开篇，通过亚历克斯·罗杰斯的故事，展示了如何识别和解决生产过程中的瓶颈。这本书让我意识到，真正的效率来自于对目标的清晰认识和对瓶颈的精准打击。&lt;/p&gt;
&lt;h3 id=&#34;故事背景&#34;&gt;故事背景&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;主角：亚历克斯·罗格（Alex Rogo），一位面临巨大工作压力的工厂经理。&lt;/li&gt;
&lt;li&gt;工厂：工厂正面临严重的财务问题，亚历克斯必须在三个月内改善工厂的运营状况，否则工厂将被关闭。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;主要内容&#34;&gt;主要内容&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;问题识别&lt;/strong&gt;：亚历克斯在工厂运营中遇到了多个问题，包括生产效率低下、库存积压、订单延迟等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;导师出现&lt;/strong&gt;：亚历克斯遇到了一位神秘的导师，乔纳（Jonah），他开始向亚历克斯传授TOC的基本原理。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;TOC原则&lt;/strong&gt;：乔纳向亚历克斯解释了TOC的五个核心步骤，这些步骤旨在帮助他识别和解决工厂的瓶颈问题。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;识别系统的制约：找出限制系统产出的瓶颈。&lt;/li&gt;
&lt;li&gt;决定如何利用制约：最大化瓶颈资源的利用。&lt;/li&gt;
&lt;li&gt;其他一切服从上述决定：调整其他所有操作以支持瓶颈资源。&lt;/li&gt;
&lt;li&gt;提升制约：如果可能，消除瓶颈。&lt;/li&gt;
&lt;li&gt;如果制约被打破，回到第一步：持续改进。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;实施变革&lt;/strong&gt;：亚历克斯开始在工厂实施TOC原则，逐步解决生产瓶颈，提高效率。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;个人生活&lt;/strong&gt;：亚历克斯在工作的同时，也面临着家庭问题。书中也探讨了如何将TOC的原则应用于个人生活中。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;结果&#34;&gt;结果&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;亚历克斯成功地改善了工厂的运营，提高了生产效率，减少了库存，缩短了交货时间，并且改善了财务状况。&lt;/li&gt;
&lt;li&gt;他的个人生活也得到了改善，因为他学会了如何更好地管理时间和精力。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;核心理念&#34;&gt;核心理念&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;制约理论&lt;/strong&gt;：任何系统都存在至少一个制约因素，识别并管理这些制约因素是提高系统整体性能的关键。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;因果关系&lt;/strong&gt;：书中强调了理解因果关系的重要性，以及如何通过逻辑推理来解决问题。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;持续改进&lt;/strong&gt;：TOC强调持续改进和适应变化，而不是寻找一劳永逸的解决方案。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;《目标》不仅是一部管理学书籍，它也是一部励志小说，通过亚历克斯的故事，鼓励读者在面对挑战时保持积极的态度，并通过系统性的思考来找到解决问题的方法。这本书对于希望提高个人和组织效率的读者来说，提供了宝贵的见解和工具。&lt;/p&gt;
&lt;h2 id=&#34;绝不是靠运气持续改进的艺术&#34;&gt;《绝不是靠运气》：持续改进的艺术&lt;/h2&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;绝不是靠运气.jpg&#34; width=&#34;150&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;在《绝不是靠运气》中，亚历克斯的旅程继续，他将TOC的原则应用于更广泛的领域，包括家庭和个人生活。这本书教会了我，持续改进是一个永无止境的过程，它要求我们不断地审视和调整自己的行动。&lt;/p&gt;
&lt;h3 id=&#34;故事背景-1&#34;&gt;故事背景&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;主角&lt;/strong&gt;：亚历克斯·罗格（Alex Rogo），在《目标》中成功改善了工厂运营的经理，现在升职为管理三家公司的高管。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;挑战&lt;/strong&gt;：亚历克斯面临的新挑战是如何在更广泛的业务领域中应用TOC（Theory of Constraints，制约理论）原则，包括营销、销售、研发和分销等。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;主要内容-1&#34;&gt;主要内容&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;营销和分销&lt;/strong&gt;：书中以企业产品的营销和分销为主线，探讨了如何在这些领域中识别和解决制约因素。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TOC的应用&lt;/strong&gt;：亚历克斯在新的职位上，继续运用TOC的原则来解决更复杂的管理问题，包括如何提高市场竞争力、优化分销网络、处理客户关系等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;思维工具&lt;/strong&gt;：书中介绍了TOC的思维工具，如现状图、冲突图、未来图等，这些工具帮助亚历克斯分析问题、制定策略并实施改进。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;个人生活&lt;/strong&gt;：亚历克斯在处理工作挑战的同时，也面临着家庭和个人生活的挑战，书中展示了他如何在事业和家庭之间寻求平衡。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;结果-1&#34;&gt;结果&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;亚历克斯成功地将TOC原则应用于营销和分销领域，提高了企业的市场表现和盈利能力。&lt;/li&gt;
&lt;li&gt;他通过TOC的思维工具，有效地解决了个人生活中的冲突，实现了事业和家庭的双赢。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;核心理念-1&#34;&gt;核心理念&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;系统思维&lt;/strong&gt;：书中强调了系统思维的重要性，即认识到企业各个部分之间的相互依赖和影响。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;逻辑推理&lt;/strong&gt;：TOC的逻辑推理方法被用来分析和解决问题，而不是依赖直觉或运气。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;持续改进&lt;/strong&gt;：亚历克斯的故事展示了持续改进的重要性，以及如何通过不断的学习和适应来应对变化。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;《绝不是靠运气》通过亚历克斯的故事，向读者展示了TOC原则在更广泛领域的应用，以及如何通过系统性的思考和逻辑推理来提高个人和组织的效率。这本书对于那些希望在商业和管理领域取得成功的人来说，提供了实用的工具和深刻的见解。&lt;/p&gt;
&lt;h2 id=&#34;仍然不足够目标的深化&#34;&gt;《仍然不足够》：目标的深化&lt;/h2&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;仍然不足够.jpg&#34; width=&#34;150&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;《仍然不足够》进一步深化了目标的概念，亚历克斯面临的挑战更加复杂。这本书让我认识到，即使在取得成就之后，我们仍然需要设定新的目标，并为之努力。&lt;/p&gt;
&lt;h3 id=&#34;核心观点&#34;&gt;核心观点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;信息技术的作用&lt;/strong&gt;：书中强调信息技术能够显著改善企业运营，但仅仅拥有信息技术并不足以实现企业的全部潜力。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TOC制约法&lt;/strong&gt;：TOC（Theory of Constraints）制约法揭示了企业信息化后的新经营境界，指出了信息技术的限制往往源自人们在科技出现之前就已经习惯的运作规则。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;故事背景-2&#34;&gt;故事背景&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;主角&lt;/strong&gt;：亚历克斯·罗格（Alex Rogo），在前作中成功应用TOC原则的经理，现在面临新的挑战。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;挑战&lt;/strong&gt;：亚历克斯需要解决信息技术在企业中的应用问题，特别是在ERP（企业资源规划）系统的实施和管理上。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;主要内容-2&#34;&gt;主要内容&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ERP系统的困境&lt;/strong&gt;：书中描述了企业在实施ERP系统后遇到的问题，如市场饱和、客户需求不断变化导致系统复杂化，以及IT投资的回报问题。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TOC在ERP中的应用&lt;/strong&gt;：亚历克斯运用TOC原则来优化ERP系统，提高企业的盈利能力和运营效率。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;管理矛盾&lt;/strong&gt;：书中探讨了ERP供应商在满足客户需求与简化系统之间的矛盾，以及如何通过TOC原则解决这些矛盾。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;生产管理&lt;/strong&gt;：书中还讨论了生产管理中的问题，如如何合理安排生产排程，以及如何通过缓冲管理来提高生产稳定性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;结果-2&#34;&gt;结果&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;亚历克斯成功地将TOC原则应用于ERP系统的管理，解决了企业在信息技术应用上的困境，提高了企业的盈利能力。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;核心理念-2&#34;&gt;核心理念&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;科技与人性&lt;/strong&gt;：科技的发展需要结合人性和企业的运作规则，才能发挥最大的效益。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;持续改进&lt;/strong&gt;：企业需要不断地审视和改进其运作规则，以适应信息技术的发展。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;系统思维&lt;/strong&gt;：企业应采用系统思维来理解和管理复杂的ERP系统，确保各个部分协同工作。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;《仍然不足够》通过亚历克斯的故事，向读者展示了如何将TOC原则应用于信息技术领域，特别是ERP系统的实施和管理，以及如何通过改变运作规则来提高企业的整体效率和盈利能力。&lt;/p&gt;
&lt;h2 id=&#34;关键链项目管理的新视角&#34;&gt;《关键链》：项目管理的新视角&lt;/h2&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;关键链.jpg&#34; width=&#34;150&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;《关键链》引入了关键链方法，这是一种全新的项目管理技术。它通过资源平衡和缓冲管理，帮助项目经理更有效地控制项目风险，确保项目按时完成。&lt;/p&gt;
&lt;h3 id=&#34;核心观点-1&#34;&gt;核心观点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;项目管理革新&lt;/strong&gt;：《关键链》提出了一种新的项目管理方法——关键链项目管理（CCPM），旨在改进和替代传统的CPM（关键路径法）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;资源限制&lt;/strong&gt;：书中强调了在项目管理中考虑资源限制的重要性，以及如何通过关键链方法更有效地分配和管理资源。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不确定性管理&lt;/strong&gt;：介绍了如何在项目计划中考虑不确定性，并通过缓冲管理来减少风险。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;故事背景-3&#34;&gt;故事背景&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;主角&lt;/strong&gt;：李查德，一位在商学院任教多年的教授，面临职业发展的瓶颈。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;情境&lt;/strong&gt;：李查德在努力晋升为永久系教授的过程中，接触到了关键链项目管理的概念，并开始探索其在实际工作中的应用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;主要内容-3&#34;&gt;主要内容&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;传统方法的局限&lt;/strong&gt;：书中通过李查德的经历，展示了传统项目管理方法在处理资源冲突和不确定性时的不足。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;关键链方法的介绍&lt;/strong&gt;：李查德学习并应用关键链方法，这种方法通过识别项目中的关键链（资源受限的任务序列）来安排项目计划。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;实践与挑战&lt;/strong&gt;：李查德在实际项目中尝试应用关键链方法，面对各种挑战，如资源分配、项目进度控制和团队协作。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;结果-3&#34;&gt;结果&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;李查德通过关键链方法成功地提高了项目管理的效率，减少了项目延误，提升了团队的士气和效率。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;核心理念-3&#34;&gt;核心理念&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;资源优化&lt;/strong&gt;：项目管理应关注资源的合理分配和优化，以提高整体项目的性能。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;系统思维&lt;/strong&gt;：采用系统思维来理解和管理项目，确保各个部分协同工作，实现项目目标。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;持续改进&lt;/strong&gt;：项目管理是一个动态过程，需要不断地监控、评估和调整计划。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;《关键链》通过李查德的故事，向读者展示了关键链项目管理方法如何帮助项目经理更有效地管理复杂项目，尤其是在资源有限和存在不确定性的情况下。&lt;/p&gt;
&lt;h2 id=&#34;醒悟个人成长的反思&#34;&gt;《醒悟》：个人成长的反思&lt;/h2&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;醒悟.jpg&#34; width=&#34;150&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;《醒悟》（假设这是高德拉特的一本书，实际上可能不存在这本书）可能是关于个人成长和自我反思的探索。它可能引导读者如何在个人生活中应用TOC的原则，以实现更深层次的自我提升。&lt;/p&gt;
&lt;h3 id=&#34;核心观点-2&#34;&gt;核心观点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;管理哲学&lt;/strong&gt;：《醒悟》通过一个零售业的故事，探讨了艾利·高德拉特的管理哲学和TOC（Theory of Constraints，制约理论）的应用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;因果关系&lt;/strong&gt;：书中强调了理解行动与结果之间的因果关系，以及如何通过改变管理概念来解决复杂的管理问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;故事背景-4&#34;&gt;故事背景&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;主角&lt;/strong&gt;：淮德，汉娜零售集团佛罗里达州博卡拉顿滩分店的经理，面临职业和个人生活的挑战。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;情境&lt;/strong&gt;：淮德不想依靠家族背景成为高管，而是希望通过自己的努力证明自己的能力。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;主要内容-4&#34;&gt;主要内容&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;管理困境&lt;/strong&gt;：淮德在管理分店时遇到了各种挑战，包括库存管理、销售目标、员工激励等问题。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;苏格拉底式的问题&lt;/strong&gt;：书中通过一系列苏格拉底式的问题引导读者和淮德一起思考，从而找到解决问题的方法。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TOC的应用&lt;/strong&gt;：淮德在故事中应用TOC的原则，逐步改善了分店的运营状况，提高了效率和盈利能力。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;结果-4&#34;&gt;结果&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;淮德通过理解和应用TOC的原则，成功地解决了分店的运营问题，实现了个人职业的成长和分店业绩的提升。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;核心理念-4&#34;&gt;核心理念&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;因果逻辑&lt;/strong&gt;：强调在管理决策中应用因果逻辑，以确保行动能够有效地导致期望的结果。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;系统思维&lt;/strong&gt;：鼓励管理者采用系统思维，识别并解决制约系统性能的关键因素。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;持续改进&lt;/strong&gt;：倡导持续改进的管理理念，通过不断的学习和实践来提升管理水平。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;《醒悟》通过淮德的故事，展示了TOC理论在实际管理中的应用，以及如何通过改变思维方式来解决看似复杂的管理问题。&lt;/p&gt;
&lt;h2 id=&#34;抉择决策的智慧&#34;&gt;《抉择》：决策的智慧&lt;/h2&gt;
&lt;div align=&#34;center&#34;&gt;  
&lt;img src=&#34;抉择.jpg&#34; width=&#34;150&#34;/&gt; 
&lt;/div&gt;
&lt;p&gt;在《抉择》中，高德拉特探讨了决策过程中的复杂性。这本书让我理解到，面对选择时，我们需要考虑长远的影响，而不仅仅是眼前的利益。&lt;/p&gt;
&lt;h3 id=&#34;核心观点-3&#34;&gt;核心观点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;TOC四大支柱&lt;/strong&gt;：书中通过对话形式阐述了TOC（Theory of Constraints，制约理论）的四大支柱信念。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;逻辑思维与决策&lt;/strong&gt;：强调逻辑思维在分析和解决企业与个人问题中的重要性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;双赢与人际关系&lt;/strong&gt;：探讨了如何在冲突中寻求双赢的解决方案，以及如何建立和谐的人际关系。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;简单性与复杂性&lt;/strong&gt;：揭示了所有系统的固有简单性，鼓励读者跳出固有的思维框架，简化复杂问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;故事背景-5&#34;&gt;故事背景&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;对话形式&lt;/strong&gt;：艾利·高德拉特博士与其女儿的对话，以轻松风趣的方式探讨深奥的管理与人生哲学。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;案例分析&lt;/strong&gt;：书中包含了多个企业管理的案例，展示了TOC理论在实际应用中的效果。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;主要内容-5&#34;&gt;主要内容&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;第一部分&lt;/strong&gt;：服装公司案例，展示了TOC理论在实际企业运营中的应用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;第二部分&lt;/strong&gt;：面包公司案例，进一步阐释TOC理论在不同行业中的应用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;第三部分&lt;/strong&gt;：对人性的深刻洞见，探讨了人性中的善良、冲突的可解性、情况的简单性以及改善的可能性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;结果-5&#34;&gt;结果&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;通过对话和案例分析，读者能够理解并应用TOC理论来提升个人和企业的决策质量，实现更高的目标。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;核心理念-5&#34;&gt;核心理念&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;固有简单性&lt;/strong&gt;：所有看似复杂的问题都有其简单的本质，通过正确的逻辑思维可以找到解决方案。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;和谐与冲突&lt;/strong&gt;：在人际关系和企业运营中，追求和谐的同时，勇于面对和解决冲突是实现双赢的关键。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;持续学习与实践&lt;/strong&gt;：TOC理论的学习是一个持续的过程，需要不断地实践和探索。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;《抉择》不仅是艾利·高德拉特博士对TOC理论的深入阐述，也是他对个人成长和企业成功哲学的深刻反思。通过书中的对话和案例，读者可以获得宝贵的思维工具和生活智慧。&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;“目标不仅仅是一个愿望，它是一个承诺。” —— 艾利·高德拉特&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>Archives</title>
        <link>https://www.wenke-chen.github.io/archives/</link>
        <pubDate>Sun, 06 Mar 2022 00:00:00 +0000</pubDate>
        
        <guid>https://www.wenke-chen.github.io/archives/</guid>
        <description></description>
        </item>
        <item>
        <title>Links</title>
        <link>https://www.wenke-chen.github.io/links/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://www.wenke-chen.github.io/links/</guid>
        <description>&lt;p&gt;To use this feature, add &lt;code&gt;links&lt;/code&gt; section to frontmatter.&lt;/p&gt;
&lt;p&gt;This page&amp;rsquo;s frontmatter:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;links&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;GitHub&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;description&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;GitHub is the world&amp;#39;s largest software development platform.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;website&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;https://github.com&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;TypeScript&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;description&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;TypeScript is a typed superset of JavaScript that compiles to plain JavaScript.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;website&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;https://www.typescriptlang.org&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ts-logo-128.jpg&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;image&lt;/code&gt; field accepts both local and external images.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Search</title>
        <link>https://www.wenke-chen.github.io/search/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://www.wenke-chen.github.io/search/</guid>
        <description></description>
        </item>
        
    </channel>
</rss>
